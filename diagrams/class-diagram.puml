@startuml Class
class User {
    string Id
    string Name
    string EmailAddress
    string Password
    string Bio
    double Latitude
    double Longitude
    string FormattedAddress
    int Credits
   
    void FollowUser(int userId)
    void Register(string username,string email,string bio,string password,string tags,string latitude,string longitude,string formattedAddress)
    void Login (string username, string password)
    User GetProfile(int userId)
    void FlagUser(int userId)

}


User "1" *-- "*" Service : creates

User "*" -- "*" User : follows
User "1" -- "*" User : flags
User "*" -- "*" Tag : interests
User "1" -- "*" Notification


class Service {
    string Id
    string Header
    string Description
    string Location
    DateTime Time
    int Credits
    DateTime CreatedDateTime
    int CreatedUserId
    int Quota    
    double Latitude
    double Longitude
    string FormattedAddress
    ServiceStatus Status
    List<Service> GetAll()
    List<Service> GetSorted(SortType sortType)
    Service GetById(int serviceId)
    void Complete(int serviceId)
    void Create(string title, string description, string location, datetime time, int hours, List<Tag> tags, int createdUserId)
   
}

Service "*" *-- "*" Tag 
Service "1" *-- "*" ServiceStatus 

enum ServiceStatus
{
    ONGOING,
    CREATOR_APPROVED,
    COMPLETED,
    CANCELLED
}

enum SortType
{
    distanceAsc,
    distanceDesc,
    serviceDateDesc,
    createdDateDesc,
    serviceDateAsc,
    createdDateAsc
}

class Tag{
    int Id
    string Name
}

class UserServiceApproval{
    int Id
    int RequesterUserId
    int RequestedServiceId
    int ApprovedByUserId
    ApprovalStatus ApprovalStatus
    void RequestServiceParticipation(int serviceId, int requesterId )
    List<UserServiceApproval> GetApprovalListRequestByUser(int userId)
    void Approve(int requestId)
    void Deny(int requestId)
}
User "1" *-- "*" UserServiceApproval : requests
Service "1" *-- "*" UserServiceApproval
User "1" *-- "*" UserServiceApproval : approves
ApprovalStatus "1" *-- "*" UserServiceApproval

enum ApprovalStatus {
    Pending
    Approved
    Denied
}

class Notification {
    int Id
    int UserId
    int Message
    bool Read
    List<Notification> GetNotificationsByUser(int userId)

}


User "1" --* "*" Notification


class UserRating {
    int Id
    int UserId
    int Rating
    void AddUserRating(string userId, int rating)
    List<Rating> GetUserRatings(int serviceId)

}

User "1" --* "*" UserRating


class ServiceRating {
    int Id
    int ServiceId
    int Rating
    void AddServiceRating(string serviceId, int rating)
    List<Rating> GetServiceRatings(int serviceId)

}
Service "1" --* "*" ServiceRating 

class Admin {
    string Id
    string Name
    string EmailAddress
    string Password

  
   
    void DismissFlags(int serviceId)
    void DeleteUser(int userId)
    void DeleteService(int serviceId)
    void EditService(int serviceId)
    User GetUser(int userId)
    User GetService(int serviceId)
    List<User> GetAllUsers(int userId)
    void FeatureServices(List<Service> services)
    void Login (string username, string password)    

}

enum BadgeType {
    newcomer
    mentor
    superMentor
    regular
    communityBuilder
    guru
    
}

class Badge {
    int Id
    User user
    BadgeType type
}

Badge "*" --* "1" BadgeType 
User "1" --* "*" Badge: earns 

enum FlagStatus {
    active
    inactive
}

enum FlagType {
    service
    event
    user
}

class Flag {
    int Id
    FlagType type
    User flaggingUser
    User flaggedUser
    FlagStatus status
}

Flag "*" --* "1" FlagType 
Flag "*" --* "1" FlagStatus 
Flag "*" --* "1" Service 
Flag "*" --* "1" User 



@enduml